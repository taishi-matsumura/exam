#+LANGUAGE: ja
#+OPTIONS: \n:t author:nil creator:t html-postamble:nil toc:nil num:nil ^:{}
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../style1.css" />

#+TITLE: DirectX(2D) 提出課題

* 以下の各STEPについて、それぞれ別の実行ファイルとしてプログラムを作成せよ
- *ソリューション名は「Exercise」とし、その配下に各STEPのプロジェクトを作成すること*
- *各STEPで必要となるDirectXの関数やWin32APIを列挙しているので、不明な点はMSDN等で調べること*
- *Windowsのプログラミングに慣れることが目的なので、前のSTEPの内容を丸々コピペするのは極力避けること*
** STEP1 空のWindowの生成
1. 空のプロジェクトを作成し、WinMainを作成する。この時点では空関数でよい。
2. WM_QUITメッセージが来るまでループするwhile文(for/do whileでも可)を作成する。(以後、これをメインループと呼ぶ)
3. メインループが無駄に超高速で回らないよう、Sleep()を用いてループ一回ごとに1msのwaitを挟む。
4. 自作のウィンドウプロシージャを作成し、空のWindowを生成する。ウィンドウプロシージャの名前は自分で決めること。
5. 任意のウィンドウタイトルを設定し、期待通りに反映されていることを目視確認すること。
*** 使用する関数：
- RegisterClass()
- CreateWindow()
- PeekMessage()
- TranslateMessage()
- DispatchMessage()
- timeBeginPeriod()
- Sleep()
- timeEndPeriod()

** STEP2 ポリゴンを一枚描画
1. DirectXオブジェクトを生成/初期化する。
2. DirectXデバイスを生成する。
3. 自作の描画関数を作成する。この時点では空関数でよい。
4. 当該関数がメインループの中から毎秒60回呼ばれるようにする。
5. 当該関数内で頂点を3つ作成し、ポリゴンを1枚描画する。
6. プログラム終了時にDirectXの各オブジェクトを解放する。
*** 使用する関数：
- GetAdapterDisplayMode()
- Direct3DCreate9()
- IDirect3D9::CreateDevice()
- timeGetTime()
- IDirect3DDevice9::SetFVF()
- IDirect3DDevice9::Clear()
- IDirect3DDevice9::BeginScene()
- IDirect3DDevice9::DrawPrimitiveUP()
- IDirect3DDevice9::EndScene()
- IDirect3DDevice9::Present()
- IDirect3DDevice9::Release()
- IDirect3D9::Release()

** STEP3 矩形の描画
1. 頂点を4つにし、ポリゴンを2枚用いて矩形を描画する。
2. 任意の透過pngファイルをロードし、テクスチャを生成する。
3. 生成したテクスチャを、前述の矩形領域に貼り付けて描画する。
*** 使用する関数：
- IDirect3DDevice9::SetRenderState()
- IDirect3DDevice9::SetTextureStageState()
- D3DXCreateTextureFromFile()
- SetTexture()

** STEP4 キーボードの状態の取得
1. DirectInputオブジェクトを生成する。
2. DirectInputキーボードデバイスを生成する。
3. キーボードのデータ形式と強調レベルを設定する。
4. 自作の操作関数を作成する。この時点では空関数でよい。
5. 当該関数がメインループの中から毎秒60回呼ばれるようにする。
6. 当該関数内でキーボードへのアクセス権を獲得し、キーボードの状態を取得する。
7. STEP3で作成した矩形を、カーソルキーを操作することで上下左右に移動させる。
8. プログラム終了時にキーボードへのアクセス権の解放と各オブジェクトを解放する。
*** 使用する関数：
- DirectInput8Create()
- IDirectInput8::CreateDevice()
- IDirectInputDevice8::SetDataFormat()
- IDirectInputDevice8::SetCooperativeLevel()
- IDirectInputDevice8::Acquire()
- IDirectInputDevice8::GetDeviceState()
- IDirectInputDevice8::Unacquire()
- IDirectInputDevice8::Release()
- IDirectInput8::Release()
